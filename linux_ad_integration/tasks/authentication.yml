---
# PAM configurations
- name: Enable home Directories
  become: True
  become_user: root
  lineinfile:
    dest: /etc/pam.d/common-session
    regexp: '^session*.*homedir*.*$'
    line: 'session optional                        pam_mkhomedir.so'
    state: present
    insertbefore: "# end of pam-auth-update config"

# SSH Configurations
- name: Add SSH banner
  become: True
  become_user: root
  template:
    src: ssh-banner.j2
    dest: /etc/ssh/ehe-ssh-banner
    owner: root
    mode: 0644

- name: Enable SSH PasswordAuthentication
  become: True
  become_user: root
  lineinfile:
    dest: /etc/ssh/sshd_config
    backup: True
    regexp: 'PasswordAuthentication no'
    line: '# PasswordAuthentication no'
    state: present
  notify:
    - restart ssh
  when:
    - not unjoin

- name: Disable SSH PasswordAuthentication
  become: True
  become_user: root
  lineinfile:
    dest: /etc/ssh/sshd_config
    backup: True
    regexp: '# PasswordAuthentication no'
    line: 'PasswordAuthentication no'
    state: present
  when:
    - unjoin
  notify:
    - restart ssh

- set_fact:
    ssh_access_group: "{{ ssh_access_groups | default('[]') }}"
    sudo_access: "{{ sudo_access | default('[]') }}"

- debug:
    var: "ssh_access_groups"

- debug:
    var: "sudo_access"

- name: Enforce SSH security requirements
  become: True
  become_user: root
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      ClientAliveInterval 300
      ClientAliveCountMax 0
      LogLevel INFO
      AllowTcpForwarding     no
      PermitTunnel           no
      PermitUserEnvironment  no
      Banner /etc/ssh/ehe-ssh-banner
      Match Group "{{ ((ssh_access_groups + sudo_access) | unique) | join(',') }}"
        PasswordAuthentication yes
        PubkeyAuthentication no
    insertafter: EOF
    state: present
  when:
    - not unjoin
  notify:
    - restart ssh

- name: Remove SSH Key Restriction
  become: True
  become_user: root
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      Match Group {{ ((ssh_access_groups + sudo_access) | unique) | join(',') }}
        PasswordAuthentication yes
        PubkeyAuthentication no
    state: absent
  when:
    - unjoin

- name: Restart Local SSH Session
  shell: sleep 1; pkill -u {{ ansible_ssh_user }} sshd
  async: 3
  poll: 2
  when: ssh_reset

# SUDOERS configurations

- name: Add access groups to sudoers.d
  become: True
  become_user: root
  template:
    src: sudoers.d.j2
    dest: "/etc/sudoers.d/100-{{ netbios }}-sudoers"
    owner: root
    mode: 0440
    validate: 'visudo -cf %s'

- name: Remove access from "{{ netbios }}" sudoers groups
  file:
    path: "/etc/sudoers.d/100-{{ netbios }}-sudoers"
    state: absent
  when: unjoin
