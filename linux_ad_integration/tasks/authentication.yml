---
# PAM configurations
- name: Enable home Directories
  become: True
  become_user: root
  lineinfile:
    dest: /etc/pam.d/common-session
    regexp: '^session*.*homedir*.*$'
    line: 'session optional                        pam_mkhomedir.so'
    state: present
    insertbefore: "# end of pam-auth-update config"

- name: Append SSH Login Groups
  become: True
  become_user: root
  template:
    src: pam.d_sshd.j2
    dest: /etc/pam.d/sshd
    owner: root
    mode: 0644

- name: Disable SSH common-account
  become: True
  become_user: root
  lineinfile:
    dest: /etc/pam.d/sshd
    regexp: '^@include common-account$'
    line: '# @include common-account'
    state: present


- name: Enable SSH common-account
  become: True
  become_user: root
  lineinfile:
    dest: /etc/pam.d/sshd
    regexp: '^#.*@include common-account$'
    line: '@include common-account'
    state: present
  when:
    - unjoin

# SSH Configurations
- name: Enable SSH PasswordAuthentication
  become: True
  become_user: root
  lineinfile:
    dest: /etc/ssh/sshd_config
    backup: True
    regexp: 'PasswordAuthentication no'
    line: '# PasswordAuthentication no'
    state: present
  notify:
    - restart ssh
  when:
    - not unjoin

- name: Disable SSH PasswordAuthentication
  become: True
  become_user: root
  lineinfile:
    dest: /etc/ssh/sshd_config
    backup: True
    regexp: '# PasswordAuthentication no'
    line: 'PasswordAuthentication no'
    state: present
  when:
    - unjoin
  notify:
    - restart ssh

- name: Reset Local SSH
  shell: sleep 1; pkill -u {{ ansible_ssh_user }} sshd
  async: 3
  poll: 2
  when: ssh_reset

# SUDOERS configurations

# - name: "Restore sudo access to original state"
#   become: True
#   become_user: root
#   lineinfile:
#     dest: /etc/sudoers
#     line: '"%{{ item }}" ALL=(ALL) ALL'
#     insertafter: '# Members of the admin group may gain root privileges'
#     backup: yes
#     state: absent
#   with_items:
#     - "{{ sudo_access }}"
#   when:
#     - unjoin

- name: "Remove Sudo Access as well as surrounding markers"
  become: True
  become_user: root
  blockinfile:
    path: /etc/sudoers
    marker: "<!-- {mark} MANAGED BY ANSILE ROLE: LINUX AD CONFIGURATION -->"
    content: ""
  when:
    - unjoin

# - name: "Grant access to sudo groups"
#   become: True
#   become_user: root
#   lineinfile:
#     dest: /etc/sudoers
#     line: '"%{{ item }}" ALL=(ALL) ALL'
#     insertafter: '# Members of the admin group may gain root privileges'
#     backup: yes
#     state: present
#   with_items:
#     - "{{ sudo_access }}"
#   when:
#     - not unjoin

- name: "Grant access to sudo groups"
  become: True
  become_user: root
  blockinfile:
    path: /etc/sudoers
    block: |
      "%{{ item }}" ALL=(ALL) ALL
    marker: "<!-- {mark} MANAGED BY ANSILE ROLE: LINUX AD CONFIGURATION -->"
    insertafter: "# Members of the admin group may gain root privileges"
  with_items:
    - "{{ sudo_access }}"
  when:
    - not unjoin
